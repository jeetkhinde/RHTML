slots {
  title: "File-based Routing Demo - RHTML",
  footer: "RHTML Feature #7 Demo"
}

cmp Page(props: &PageProps<()>) {
  <div class="container">
    <h1 class="page-title">
      File-based Routing üõ£Ô∏è
    </h1>

    <div class="demo-section">
      <h2 class="section-title">What is File-based Routing?</h2>
      <p class="description">
        File-based routing automatically creates routes from your file structure.
        No need to manually configure routes - just create files in the <code>pages/</code> directory!
      </p>
    </div>

    <div class="demo-section">
      <h2 class="section-title">Features</h2>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">üìÅ</div>
          <h3>Static Routes</h3>
          <p><code>pages/about.rhtml</code> ‚Üí <code>/about</code></p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">üîÄ</div>
          <h3>Dynamic Routes</h3>
          <p><code>pages/users/[id].rhtml</code> ‚Üí <code>/users/:id</code></p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">üìÑ</div>
          <h3>Index Pages</h3>
          <p><code>pages/users/index.rhtml</code> ‚Üí <code>/users</code></p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">üé®</div>
          <h3>Nested Layouts</h3>
          <p><code>pages/users/_layout.rhtml</code> wraps all <code>/users/*</code> pages</p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">üéØ</div>
          <h3>Route Priority</h3>
          <p>Static routes always match before dynamic routes</p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">üî§</div>
          <h3>Parameters</h3>
          <p>Route parameters are available as variables in templates</p>
        </div>
      </div>
    </div>

    <div class="demo-section">
      <h2 class="section-title">Live Examples</h2>

      <div class="examples">
        <div class="example">
          <h4>Static Routes</h4>
          <ul class="example-links">
            <li><a href="/">/</a> <span>‚Üí pages/index.rhtml</span></li>
            <li><a href="/about">/about</a> <span>‚Üí pages/about.rhtml</span></li>
            <li><a href="/components">/components</a> <span>‚Üí pages/components.rhtml</span></li>
          </ul>
        </div>

        <div class="example">
          <h4>Dynamic Routes with Parameters</h4>
          <ul class="example-links">
            <li><a href="/users/1">/users/1</a> <span>‚Üí pages/users/[id].rhtml (id=1)</span></li>
            <li><a href="/users/42">/users/42</a> <span>‚Üí pages/users/[id].rhtml (id=42)</span></li>
            <li><a href="/users/admin">/users/admin</a> <span>‚Üí pages/users/[id].rhtml (id=admin)</span></li>
          </ul>
        </div>

        <div class="example">
          <h4>Static Priority</h4>
          <ul class="example-links">
            <li><a href="/users/new">/users/new</a> <span>‚Üí pages/users/new.rhtml (NOT [id].rhtml!)</span></li>
          </ul>
          <p class="example-note">
            Even though <code>/users/new</code> matches the pattern <code>/users/:id</code>,
            the static route <code>new.rhtml</code> takes priority.
          </p>
        </div>

        <div class="example">
          <h4>Nested Layouts</h4>
          <ul class="example-links">
            <li><a href="/users">/users</a> <span>‚Üí Uses pages/users/_layout.rhtml</span></li>
            <li><a href="/users/1">/users/1</a> <span>‚Üí Uses pages/users/_layout.rhtml</span></li>
            <li><a href="/">/</a> <span>‚Üí Uses pages/_layout.rhtml (root layout)</span></li>
          </ul>
        </div>
      </div>
    </div>

    <div class="info-box">
      <h3 class="info-title">üí° How to Create Dynamic Routes</h3>
      <ol class="info-list">
        <li>Create a file with square brackets: <code>pages/users/[id].rhtml</code></li>
        <li>RHTML converts brackets to route parameters: <code>/users/:id</code></li>
        <li>The parameter becomes a variable in your template</li>
        <li>Access it using curly braces: <code>{id}</code></li>
        <li>Parameters are automatically passed to the renderer!</li>
      </ol>
    </div>

    <div class="nav-links">
      <a href="/users" class="nav-link">
        Try Users Demo ‚Üí
      </a>
      <a href="/" class="nav-link">
        ‚Üê Home
      </a>
    </div>
  </div>
}

css Page {
  .container {
    max-width: 64rem;
    margin: 0 auto;
    padding: 2rem 1.5rem;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 2rem;
  }

  .demo-section {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a202c;
    margin-bottom: 1rem;
  }

  .description {
    color: #64748b;
    line-height: 1.6;
  }

  .description code {
    background: #f1f5f9;
    padding: 0.125rem 0.375rem;
    border-radius: 4px;
    font-family: monospace;
    font-size: 0.875rem;
    color: #dc2626;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
  }

  .feature-card {
    background: linear-gradient(135deg, #f6f8fb 0%, #ffffff 100%);
    border-radius: 12px;
    padding: 1.5rem;
    text-align: center;
    border: 2px solid #e2e8f0;
    transition: all 0.3s;
  }

  .feature-card:hover {
    transform: translateY(-4px);
    border-color: #667eea;
    box-shadow: 0 8px 16px rgba(102, 126, 234, 0.1);
  }

  .feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .feature-card h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #1a202c;
    margin-bottom: 0.5rem;
  }

  .feature-card p {
    font-size: 0.875rem;
    color: #64748b;
    font-family: monospace;
  }

  .feature-card code {
    font-size: 0.75rem;
  }

  .examples {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-top: 1.5rem;
  }

  .example h4 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #475569;
    margin-bottom: 0.75rem;
  }

  .example-links {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .example-links li {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .example-links a {
    font-family: monospace;
    font-size: 0.875rem;
    color: #667eea;
    text-decoration: none;
    font-weight: 600;
  }

  .example-links a:hover {
    text-decoration: underline;
  }

  .example-links span {
    color: #94a3b8;
    font-size: 0.875rem;
  }

  .example-note {
    margin-top: 0.75rem;
    padding: 1rem;
    background: #fef3c7;
    border-left: 3px solid #f59e0b;
    border-radius: 4px;
    font-size: 0.875rem;
    color: #78350f;
    line-height: 1.6;
  }

  .example-note code {
    background: #fef3c7;
    padding: 0.125rem 0.375rem;
    border-radius: 4px;
    font-family: monospace;
  }

  .info-box {
    background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    border-left: 4px solid #3b82f6;
    padding: 1.5rem;
    border-radius: 8px;
    margin-bottom: 2rem;
  }

  .info-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e40af;
    margin-bottom: 1rem;
  }

  .info-list {
    list-style: decimal;
    padding-left: 2rem;
    color: #1e3a8a;
    line-height: 2;
  }

  .info-list code {
    background: #dbeafe;
    padding: 0.125rem 0.375rem;
    border-radius: 4px;
    font-family: monospace;
    font-size: 0.875rem;
  }

  .nav-links {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .nav-link {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 8px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s;
  }

  .nav-link:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
  }
}
